name: Rhino Test
on:
  # Run on pushes to 'main' branch
  push:
    branches:
      - main
  # Run on any opened pull request
  pull_request:
  # Run manually via GitHub Actions website
  workflow_dispatch:
permissions:
  contents: read
jobs:
  main:
    name: Run linters and tests
    runs-on: ubuntu-24.04-arm
    container:
      image: docker.io/jsleight1/example_rhino_shiny:latest
      options: --user root
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2.11.0
        with:
          r-version: '4.4.2'
          install-r: false

      - name: Add libPaths
        run: |
          echo -e '.libPaths(c("/usr/local/lib/R/site-library", "/usr/local/lib/R/library"))' > .Rprofile
        shell: bash

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.0

      # - name: Lint R
      #   if: always()
      #   shell: Rscript {0}
      #   run: rhino::lint_r()

      # - name: Lint JavaScript
      #   if: always()
      #   shell: Rscript {0}
      #   run: rhino::lint_js()

      # - name: Lint Sass
      #   if: always()
      #   shell: Rscript {0}
      #   run: rhino::lint_sass()

      # - name: Build JavaScript
      #   if: always()
      #   shell: Rscript {0}
      #   run: rhino::build_js()

      # - name: Build Sass
      #   if: always()
      #   shell: Rscript {0}
      #   run: rhino::build_sass()

      - name: Run R unit tests
        if: always()
        shell: Rscript {0}
        run: |
          list.files(all.files = TRUE)

          list.files(“/usr/local/lib/R/site-library/box/mod”, all.files = TRUE)

          #box::use(app/logic/data_transformation[transform_data])

          
          #testthat::test_dir(fs::path("tests", "testthat"))
          #rhino::test_r()

      # - name: Run Cypress end-to-end tests
      #   if: always()
      #   uses: cypress-io/github-action@v6
      #   with:
      #     working-directory: .rhino # Created by earlier commands which use Node.js
      #     start: npm run run-app
      #     project: ../tests
      #     wait-on: 'http://localhost:3333/'
      #     wait-on-timeout: 60
